[general]
# Path to the AWSLogs agent's state file. Agent uses this file to maintain
# client side state across its executions.
state_file = /var/awslogs/state/agent-state


## Each log file is defined in its own section. The section name doesn't
## matter as long as its unique within this file.
#
#[kern.log]
#
## Path of log file for the agent to monitor and upload.
#
#file = /var/log/kern.log
#
## Name of the destination log group.
#
#log_group_name = kern.log
#
## Name of the destination log stream.
#
#log_stream_name = {instance_id}
#
## Format specifier for timestamp parsing.
#
#datetime_format = %b %d %H:%M:%S
#
#

<% @streams.each do |stream| -%>
#if a path is not an absolute path the code below assumes is it relative to :deploy_to from the configure recipe
<% Chef::Log.info("Processing Stream:")
Chef::Log.info(stream) -%>
<% file_path = stream["path"][0] == '/' ? stream["path"] : "#{stream["deploy_to"]}/#{stream["path"]}" %>
<% Chef::Log.info("#{stream["name"]} (#{file_path})") %>
<% if File.exist?(file_path) || file_path =~ /\*/ %>
<% Chef::Log.info("Found #{stream["name"]}") %>
[<%= node[:opsworks][:stack][:name].gsub(/[\(\)]/, '') %>_<%= stream["name"] %>]
file = <%= file_path %>
log_group_name = <%= node[:opsworks][:stack][:name].gsub(/[\(\) ]/,'_') %><%= stream["application"] != "" ? "_#{stream["application"]}" : "" %>
log_stream_name = <%= node[:opsworks][:instance][:hostname] %>_<%= stream["name"] %>
datetime_format = <%= stream["datetime_format"] %>

<% end %>
<% end %>
