[general]
# Path to the AWSLogs agent's state file. Agent uses this file to maintain
# client side state across its executions.
state_file = /var/awslogs/state/agent-state


## Each log file is defined in its own section. The section name doesn't
## matter as long as its unique within this file.
#
#[kern.log]
#
## Path of log file for the agent to monitor and upload.
#
#file = /var/log/kern.log
#
## Name of the destination log group.
#
#log_group_name = kern.log
#
## Name of the destination log stream.
#
#log_stream_name = {instance_id}
#
## Format specifier for timestamp parsing.
#
#datetime_format = %b %d %H:%M:%S
#
#

#test for XXXX log file
#<% if File.exist?('XXXX') -%>
#[<%= node[:opsworks][:stack][:name] %>_XXXX]
#file = <%= node[:cwlogs][:logfile] %>
#log_group_name = <%= node[:opsworks][:stack][:name].gsub(' ','_') %>
#log_stream_name = <%= node[:opsworks][:instance][:hostname] %>_XXXX
#datetime_format = [%Y-%m-%d %H:%M:%S]
#<% end -%>

#test for nginx access log file
<% if File.exist?("/var/log/nginx/#{node["opsworks"]["applications"][0]["slug_name"]}.access.log") -%>
<% Chef::Log.info("Found Nginx access log") %>
[<%= node[:opsworks][:stack][:name] %>_nginx_access]
file = <%= "/var/log/nginx/#{node["opsworks"]["applications"][0]["slug_name"]}.access.log" %>
log_group_name = <%= node[:opsworks][:stack][:name].gsub(' ','_') %>
log_stream_name = <%= node[:opsworks][:instance][:hostname] %>_nginx_access
datetime_format = [%Y/%m/%d %H:%M:%S]
<% end -%>

#test for Nginx log file with log_format <%= "/var/log/nginx/#{node["opsworks"]["applications"][0]["slug_name"]}.#{node["deploy"][node["opsworks"]["applications"][0]["slug_name"]]["log_format"][0]}.access.log" %>
<% if File.exist?("/var/log/nginx/#{node["opsworks"]["applications"][0]["slug_name"]}.#{node["deploy"][node["opsworks"]["applications"][0]["slug_name"]]["log_format"][0]}.access.log") -%>
<% Chef::Log.info("Found Nginx access log with log format") %>
[<%= node[:opsworks][:stack][:name] %>_nginx_<%= node["deploy"][node["opsworks"]["applications"][0]["slug_name"]]["log_format"][0] %>]
file = <%= "/var/log/nginx/#{node["opsworks"]["applications"][0]["slug_name"]}.#{node["deploy"][node["opsworks"]["applications"][0]["slug_name"]]["log_format"][0]}.access.log" %>
log_group_name = <%= node[:opsworks][:stack][:name].gsub(' ','_') %>
log_stream_name = <%= node[:opsworks][:instance][:hostname] %>_nginx_<%= node["deploy"][node["opsworks"]["applications"][0]["slug_name"]]["log_format"][0] %>
datetime_format = [%Y/%m/%d %H:%M:%S]
<% end -%>

#test for Rails log file
<% if File.exist?("/srv/www/#{node["opsworks"]["applications"][0]["slug_name"]}/shared/log/#{node["deploy"][node["opsworks"]["applications"][0]["slug_name"]]["rails_env"]}.log") -%>
<% Chef::Log.info("Found Rails log") %>
[<%= node[:opsworks][:stack][:name] %>_rails]
file = <%= "/srv/www/#{node["opsworks"]["applications"][0]["slug_name"]}/shared/log/#{node["deploy"][node["opsworks"]["applications"][0]["slug_name"]]["rails_env"]}.log" %>
log_group_name = <%= node[:opsworks][:stack][:name].gsub(' ','_') %>
log_stream_name = <%= node[:opsworks][:instance][:hostname] %>_rails
datetime_format = [%Y-%m-%dT%H:%M:%S]
<% end -%>

#test for sidekiq log file
<% if File.exist?("/srv/www/#{node["opsworks"]["applications"][0]["slug_name"]}/shared/log/sidekiq.log") -%>
<% Chef::Log.info("Found Sidekiq log") %>
[<%= node[:opsworks][:stack][:name] %>_sidekiq]
file = <%= "/srv/www/#{node["opsworks"]["applications"][0]["slug_name"]}/shared/log/sidekiq.log" %>
log_group_name = <%= node[:opsworks][:stack][:name].gsub(' ','_') %>
log_stream_name = <%= node[:opsworks][:instance][:hostname] %>_sidekiq
datetime_format = [%Y-%m-%dT%H:%M:%S]
<% end -%>

#test for auth log file
<% if File.exist?('/var/log/auth.log') -%>
<% Chef::Log.info("Found Auth log") %>
[<%= node[:opsworks][:stack][:name] %>_auth]
file = /var/log/auth.log
log_group_name = <%= node[:opsworks][:stack][:name].gsub(' ','_') %>
log_stream_name = <%= node[:opsworks][:instance][:hostname] %>_auth
datetime_format = %b %d %H:%M:%S
<% end -%>